<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.proj.main.usersession.dao.IUserSessionDAO">
	
	<insert id="insertLoginUser" parameterType="String">
		INSERT INTO user_sessions (
			SESSION_ID, 
			MEM_ID, 
			LOGIN_TIME, 
			LOGOUT_TIME)
		VALUES (
			user_sessions_seq.NEXTVAL,
			#{memId},
			CURRENT_TIMESTAMP,
			NULL)
	</insert>
	
	<update id="updateLogoutTime" parameterType="String">
		UPDATE user_sessions
		SET LOGOUT_TIME = CURRENT_TIMESTAMP
		WHERE MEM_ID = #{memId} AND LOGOUT_TIME IS NULL
		
	</update>
	
	<update id="updateTimeCalc" parameterType="String">
		UPDATE user_sessions
		SET SESSION_DURATION = 
		    (EXTRACT(DAY FROM (LOGOUT_TIME - LOGIN_TIME)) * 86400) +  
		    (EXTRACT(HOUR FROM (LOGOUT_TIME - LOGIN_TIME)) * 3600) + 
		    (EXTRACT(MINUTE FROM (LOGOUT_TIME - LOGIN_TIME)) * 60) + 
		    EXTRACT(SECOND FROM (LOGOUT_TIME - LOGIN_TIME))
		WHERE LOGOUT_TIME IS NOT NULL AND MEM_ID = #{memId}
	</update>
	
	<select id="selectAvgDuration" resultType="com.proj.main.usersession.dto.UserSessionDTO">
		SELECT MEM_ID,
       		ROUND(AVG(SESSION_DURATION) / 60) AS SESSION_DURATION
		FROM user_sessions
		WHERE SESSION_DURATION IS NOT NULL
		AND MEM_ID != 'admin'
		GROUP BY MEM_ID
	</select>
	
	
	<select id="yesterdayUserCount" resultType="Integer">
		SELECT SUM(login_count) AS yesterdayUserCount
	    FROM (
	        SELECT MEM_ID, COUNT(MEM_ID) AS login_count
	        FROM user_sessions
	        WHERE login_time >= TRUNC(SYSDATE) - INTERVAL '1' DAY
	        AND login_time &lt; TRUNC(SYSDATE)
	        AND mem_id != 'admin'
	        GROUP BY MEM_ID
	    ) user_logins
	</select>
	
	<select id="todayUserCount" resultType="Integer">
		SELECT SUM(count_per_id) AS total_login_count
		FROM (
		    SELECT MEM_ID, COUNT(MEM_ID) AS count_per_id
		    FROM user_sessions
		    WHERE TRUNC(login_time) = TRUNC(SYSDATE)
		    AND mem_id != 'admin'
		    GROUP BY MEM_ID
		) login_counts
	</select>
	
	<select id="yesterdayUserAvg" resultType="Integer">
		SELECT ROUND(AVG(SESSION_DURATION) / 60) AS avg_session_duration_minutes
		FROM user_sessions
		WHERE TRUNC(LOGIN_TIME) = TRUNC(SYSDATE) - 1  
		AND SESSION_DURATION IS NOT NULL
		AND MEM_ID != 'admin'
	</select>
	
	<select id="todayUserAvg" resultType="Integer">
		SELECT ROUND(AVG(SESSION_DURATION) / 60) AS avg_session_duration_minutes
		FROM user_sessions
		WHERE TRUNC(LOGIN_TIME) = TRUNC(SYSDATE)
		AND SESSION_DURATION IS NOT NULL
		AND MEM_ID != 'admin'
	</select>
	
	<select id="userLoginCount" resultType="com.proj.main.usersession.dto.UserCountDTO" parameterType="String">
		SELECT 
		    TRUNC(LOGIN_TIME) AS LOGIN_DATE,               
		    TO_CHAR(LOGIN_TIME, 'HH24') AS LOGIN_HOUR,
		    COUNT(*) AS LOGIN_COUNT
		FROM 
		    user_sessions
		WHERE 
		    TRUNC(LOGIN_TIME) = TO_DATE(#{loginDate}, 'YYYY-MM-DD')
		GROUP BY 
		    TRUNC(LOGIN_TIME),
		    TO_CHAR(LOGIN_TIME, 'HH24')
		ORDER BY 
		    LOGIN_DATE, 
		    LOGIN_HOUR
	</select>
	
	<select id="selectDate" resultType="String">
		SELECT 
		   TO_CHAR(LOGIN_TIME,'YYYY-MM-DD') AS LOGIN_DATE 
		FROM 
		    user_sessions
		WHERE 
		    LOGIN_TIME >= TO_DATE('2024-11-27', 'YYYY-MM-DD')
		    AND LOGIN_TIME &lt; TRUNC(SYSDATE) + 1  
		GROUP BY 
		   TO_CHAR(LOGIN_TIME,'YYYY-MM-DD')
		ORDER BY 
		    LOGIN_DATE
	</select>
	
	<select id="selectAllLoginCount" resultType="com.proj.main.usersession.dto.UserCountDTO">
		SELECT 
		    TO_CHAR(LOGIN_TIME, 'HH24') AS LOGIN_HOUR,
		    COUNT(*) AS LOGIN_COUNT
		FROM 
		    user_sessions
		WHERE 
		    LOGIN_TIME >= TO_DATE('2024-11-27', 'YYYY-MM-DD')
		    AND LOGIN_TIME &lt; TRUNC(SYSDATE)+1  
		   GROUP BY 
		    TO_CHAR(LOGIN_TIME, 'HH24')
		ORDER BY  
		    LOGIN_HOUR
	</select>
	
	<select id="selectAllUserVisit" resultType="Integer">
		select sum(count(mem_id)) as mem_id
		from user_sessions
		where 1=1
		AND mem_id != 'admin'
		GROUP BY mem_id
	</select>
	
	

</mapper>